name: Parse Semver

description: Extracts major, minor, patch, prerelease, and full version from a given semver.

inputs:
  version:
    description: 'The version to process'
    required: true
    default: 'v1.0.0'

outputs:
  major:
    description: 'MAJOR part of the semver'
    value: ${{ steps.parse.outputs.major }}
  minor:
    description: 'MINOR part of the semver'
    value: ${{ steps.parse.outputs.minor }}
  patch:
    description: 'PATCH part of the semver'
    value: ${{ steps.parse.outputs.patch }}
  prerelease:
    description: 'Prerelease part of the semver'
    value: ${{ steps.parse.outputs.prerelease }}
  fullversion:
    description: 'Full representation of the semver'
    value: ${{ steps.parse.outputs.fullversion }}

runs:
  using: "composite"
  steps:
    - name: Parse Semver
      id: parse
      shell: bash
      run: |
        FULL_VERSION="${{ inputs.version }}"
        VERSION="${FULL_VERSION#v}"

        # Extract major, minor, patch
        MAJOR=$(echo "$VERSION" | cut -d. -f1)
        MINOR=$(echo "$VERSION" | cut -d. -f2)
        PATCH=$(echo "$VERSION" | cut -d. -f3 | cut -d- -f1)
        PRERELEASE=""

        # Extract the prerelease without the build
        if [[ "$VERSION" == *"-"* ]]; then
          PRERELEASE=$(echo "$VERSION" | cut -d- -f2 | cut -d. -f1)
        fi

        # Set outputs
        echo "major=$MAJOR" >> "$GITHUB_OUTPUT"
        echo "minor=$MINOR" >> "$GITHUB_OUTPUT"
        echo "patch=$PATCH" >> "$GITHUB_OUTPUT"
        echo "prerelease=$PRERELEASE" >> "$GITHUB_OUTPUT"
        echo "fullversion=$FULL_VERSION" >> "$GITHUB_OUTPUT"
    - name: Exit if major, minor, or patch not found
      if: ${{ !steps.parse.outputs.major || !steps.parse.outputs.minor || !steps.parse.outputs.patch }}
      uses: actions/github-script@v7
      with:
        script: core.setFailed("Error parsing semver ${{ inputs.version }}\nMajor:${{ steps.parse.outputs.major }}\nMinor:${{ steps.parse.outputs.minor }}\nPatch:${{ steps.parse.outputs.patch }}")